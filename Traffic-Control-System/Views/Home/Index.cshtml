@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@{
    ViewData["Title"] = "Home Page";
}

<style>
    ::-webkit-scrollbar {
        width: 0px !important;
    }
   
    ::-webkit-scrollbar-thumb {
        background: #808080 !important;
    }

    .container {
        padding-top: 25px;
        max-width: 95%;
    }

    h2 {
        padding-left: 45px
    }

    .spacer {
        margin-left: 5px; 
    }

    .btn-primary{
        color: #050505 !important;
        background-color: orange;
        border-color: orange;
    }

    .btn-primary:focus {
        background-color: orange;
        border-color: orange !important;
    }

    .btn-primary:focus:active {
        background-color: orange;
        border-color: orange !important;
        box-shadow: 0 0 2px 1px orange !important;
    }

    .custom-access{
        color: #050505 !important;
        background-color: #dcda63;
        border-color: #dcda63;
    }

    .custom-access:focus {
        background-color: #dcda63;
        border-color: #dcda63 !important;
    }

    .custom-access:focus:active {
        background-color: #dcda63;
        border-color: #dcda63 !important;
        box-shadow: 0 0 2px 1px #dcda63 !important;
    }

    .e-dropdownbase .e-list-item {
        color: white;
        background-color: #1e1e22;
    }

    .e-dropdownbase .e-list-item:hover {
        color: white;
        background-color: #42A5F5;
    }

    .badge-danger{
        color: white;
        background-color: #dc3545;
    }
    
    .e-dropdownbase .e-list-item.e-active {
        color: white;
        background-color: #42A5F5 !important;
    }
    
    .k-button.custom-live {
        background-color: #ff4d4d;
        color: white;
        font-size: 16px;
        font-weight: bold;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .k-button.custom-live:hover {
        background-color: #e60000; 
    }

    .k-button.custom-live:active {
        transform: scale(0.98);
        background-color: #b30000; 
    }
</style>

<h2 style="display: inline-block;">Traffic Signals</h2>
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" style="margin-left: 797px;" data-toggle="modal" data-target="#exampleModalCenter">Add</button>

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color: black;">Add New Traffic Signal</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="color: black;" id="page1">
                <form id="trafficSignalForm">
                    <div class="form-group">
                        <label for="signalAddress">Traffic Signal Address:</label>
                        <input type="text" class="form-control" id="signalAddress" placeholder="Enter traffic signal address" required>
                    </div>
                    <div class="form-group">

                      <label for="signalDirection">Direction1:</label>
                        <input type="text" class="form-control" id="signalDirection" placeholder="Enter direction" required>
                    </div>
                    <div class="form-group">
                        <label for="signalGreen">GreenLight1:</label>
                        <input type="text" class="form-control" id="signalGreen" placeholder="Enter green light time" required>
                    </div>
                    <div class="form-group">
                        <label for="signalDirection">Direction2:</label>
                        <input type="text" class="form-control" id="signalDirection2" placeholder="Enter direction" required>
                    </div>
                    <div class="form-group mb-4">
                        <label for="signalGreen2">GreenLight2:</label>
                        <input type="text" class="form-control" id="signalGreen2" placeholder="Enter green light time" required>
                    </div>
                    <button type="button" class="btn btn-primary" id="saveTrafficSignal">Save, Next Page</button>
                </form>
            </div>

            <div class="modal-body" style="color: black; display: none;" id="page2">
                <div class="form-group">
                    <label for="deviceStreamId">Device Stream ID:</label>
                    <input type="text" class="form-control" id="deviceStreamId" readonly>
                </div>
                <div class="form-group mb-4">
                    <label for="apiKey">API Key:</label>
                    <input type="text" class="form-control" id="apiKey" readonly>
                </div>
                <button type="button" class="btn btn-secondary" onclick="goToPreviousPage()">Go Back</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="container">
            <div class="e-content"> 
                <div>
                    @(Html.EJS().Grid("adminSignalGrid")
                        .Height("400px")
                        .DataSource(dataManger => {
                            dataManger.Url("/Home/TrafficSignalsList").Key("id").CrossDomain(false);
                        })
                        .Columns(col => {
                            col.Field("id").HeaderText("ID").Width("120").Add();
                            col.Field("Address").HeaderText("Address").Width("150").Add();
                            col.Field("NumofViolations").HeaderText("Number of Violations").Width("150").Add();
                            
                            col.HeaderText("Actions").Template("<button class='btn custom-access' onclick='onAccess(this)'>Access</button> <button class='k-button custom-live' onclick='onLive(this)'>Live</button>").Width("100").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                            
                        })
                        .AllowPaging()
                        .Render()
                    )
                </div>
            </div>    
</div>

@section Scripts{

    <script>
        $(document).ready(function () {
            $('#saveTrafficSignal').click(function () {
                var signalData = {
                    Address: $('#signalAddress').val(),
                    Direction1: $('#signalDirection').val(),
                    Direction2: $('#signalDirection2').val(),
                    Direction1Green: $('#signalGreen').val(),
                    Direction2Green: $('#signalGreen2').val()
                };

                $.ajax({
                    url: '@Url.Action("SaveTrafficSignal", "Home")', // Correct ASP.NET MVC routing
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(signalData),
                    dataType: 'json', // Expect JSON response
                    success: function (response) {
                        if (response && response.deviceStreamID && response.apiKey) {
                            $('#deviceStreamId').val(response.deviceStreamID);
                            $('#apiKey').val(response.apiKey);
                            $('#page1').hide();
                            $('#page2').show();
                            var grid = document.getElementById('adminSignalGrid').ej2_instances[0];
                            grid.refresh();

                        } else {
                            console.error("Invalid response format:", response);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', error);
                        console.error('Response Text:', xhr.responseText);
                    }
                });
            });
        });

        // Access button functionality
        function onAccess(button) {
            var gridObj = document.getElementById('adminSignalGrid').ej2_instances[0];
            var row = button.closest('tr');
            var uid = row.getAttribute('data-uid');

            if (uid) {
                var rowData = gridObj.getRowObjectFromUID(uid).data;
                var id = rowData.id;

                // Redirect to the IncidentReport page
                window.location.href = `/Home/IncidentReport?ID=${id}`;
            } else {
                console.error("UID not found in the row.");
            }
        }

        // Live button functionality
        function onLive(button){
            var gridObj = document.getElementById('adminSignalGrid').ej2_instances[0];

            var row = button.closest('tr');

            var uid = row.getAttribute('data-uid');

            if (uid) {
                var rowData = gridObj.getRowObjectFromUID(uid).data;

                var id = rowData.id; 

                window.location.href = `/Home/Stream?ID=${id}`;
            } else {
                console.error("UID not found in the row.");
            }
        }
    </script>

}