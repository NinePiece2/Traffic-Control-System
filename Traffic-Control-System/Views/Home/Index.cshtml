@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids
@{
    ViewData["Title"] = "Home Page";
}

<style>
    ::-webkit-scrollbar {
        width: 0px !important;
    }
   
    ::-webkit-scrollbar-thumb {
        background: #808080 !important;
    }

    .container {
        padding-top: 25px;
        max-width: 95%;
    }

    h2 {
        padding-left: 45px
    }

    .spacer {
        margin-left: 5px; 
    }

    .btn-primary{
        color: #050505 !important;
        background-color: orange;
        border-color: orange;
    }

    .btn-primary:focus {
        background-color: orange;
        border-color: orange !important;
    }

    .btn-primary:focus:active {
        background-color: orange;
        border-color: orange !important;
        box-shadow: 0 0 2px 1px orange !important;
    }

    .custom-access{
        color: #050505 !important;
        background-color: #dcda63;
        border-color: #dcda63;
    }

    .custom-access:focus {
        background-color: #dcda63;
        border-color: #dcda63 !important;
    }

    .custom-access:focus:active {
        background-color: #dcda63;
        border-color: #dcda63 !important;
        box-shadow: 0 0 2px 1px #dcda63 !important;
    }

    .e-dropdownbase .e-list-item {
        color: white;
        background-color: #1e1e22;
    }

    .e-dropdownbase .e-list-item:hover {
        color: white;
        background-color: #42A5F5;
    }

    .badge-danger{
        color: white;
        background-color: #dc3545;
    }
    
    .e-dropdownbase .e-list-item.e-active {
        color: white;
        background-color: #42A5F5 !important;
    }

</style>

<h2 style="display: inline-block;">Traffic Signals</h2>
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" style="margin-left: 797px;" data-toggle="modal" data-target="#exampleModalCenter">Add</button>

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle" style="color: black;">Add New Traffic Signal</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <!-- First page of the form -->
            <div class="modal-body" style="color: black;" id="page1">
                <form id="trafficSignalForm">
                    <div class="form-group">
                        <label for="signalAddress">Traffic Signal Address:</label>
                        <input type="text" class="form-control" id="signalAddress" placeholder="Enter traffic signal address" required>
                    </div>
                    <div class="form-group">
                        <label for="signalDirection">Direction:</label>
                        <input type="text" class="form-control" id="signalDirection" placeholder="Enter direction" required>
                    </div>
                </form>
            </div>
            <!-- Second page of the form -->
            <div class="modal-body" style="color: black; display: none;" id="page2">
                <form id="trafficSignalForm">
                    <div class="form-group">
                        <label for="deviceStreamId">Device Stream ID:</label>
                        <input type="text" class="form-control" id="deviceStreamId" placeholder="Enter device stream id" required>
                    </div>
                    <div class="form-group">
                        <label for="apiKey">API Key:</label>
                        <input type="text" class="form-control" id="apiKey" placeholder="Enter key" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="nextButton" onclick="goToNextPage()">Next</button>
                <button type="button" class="btn btn-secondary" id="backButton" style="display: none;" onclick="goToPreviousPage()">Back</button>
                <button type="button" class="btn btn-primary" id="saveButton" style="display: none;" onclick="saveTrafficSignal()">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>
    let currentPage = 1;

    // Function to go to the next page
    function goToNextPage() {
        if (currentPage === 1) {
            // Move to page 2
            document.getElementById('page1').style.display = 'none';
            document.getElementById('page2').style.display = 'block';
            document.getElementById('nextButton').style.display = 'none';
            document.getElementById('saveButton').style.display = 'inline-block';
            document.getElementById('backButton').style.display = 'inline-block';
            currentPage = 2;
        }
    }

    // Function to go to the previous page
    function goToPreviousPage() {
        if (currentPage === 2) {
            // Move back to page 1
            document.getElementById('page2').style.display = 'none';
            document.getElementById('page1').style.display = 'block';
            document.getElementById('nextButton').style.display = 'inline-block';
            document.getElementById('saveButton').style.display = 'none';
            document.getElementById('backButton').style.display = 'none';
            currentPage = 1;
        }
    }

    // Function to save traffic signal
    function saveTrafficSignal() {
        var signalAddress = document.getElementById('signalAddress').value;
        var signalDirection = document.getElementById('signalDirection').value;
        var signalName = document.getElementById('deviceStreamId').value;
        var signalLocation = document.getElementById('apiKey').value;

        if (signalName && signalLocation && signalAddress && signalDirection) {
            alert('Traffic Signal Added: \nAddress: ' + signalAddress + '\nDirection: ' + signalDirection + '\nDevice Stream ID: ' + deviceStreamId + '\nAPI Key: ' + apiKey);
            // Optionally, you can add the traffic signal to a list or database here
            document.getElementById('trafficSignalForm').reset();
            currentPage = 1;
            document.getElementById('page1').style.display = 'block';
            document.getElementById('page2').style.display = 'none';
            document.getElementById('nextButton').style.display = 'inline-block';
            document.getElementById('saveButton').style.display = 'none';
        } else {
            alert('Please fill in all fields.');
        }
    }
</script>

<div class="container">
            <div class="e-content"> 
                <div>
                    @(Html.EJS().Grid("adminSignalGrid")
                        .Height("400px")
                        .DataSource(dataManger => {
                            dataManger.Url("/Home/TrafficSignalsList").Key("id").CrossDomain(false);
                        })
                        .Columns(col => {
                            col.Field("id").HeaderText("ID").Width("120").Add();
                            col.Field("Address").HeaderText("Address").Width("150").Add();
                            col.Field("NumofViolations").HeaderText("Number of Violations").Width("150").Add();
                            
                            //button to incident report of specific violation
                            col.HeaderText("Actions").Template("<button class='k-button custom-access' onclick='onAccess(this)'>Access</button> ").Width("100").Add();
                            
                        })
                        .AllowPaging()
                        .Render()
                    )
                </div>
            </div>    
</div>

<script>
    function onAccess(button) {
        // Get the grid instance
        var gridObj = document.getElementById('adminSignalGrid').ej2_instances[0];

        // Find the closest row to the clicked button
        var row = button.closest('tr');

        // Retrieve the UID of the row
        var uid = row.getAttribute('data-uid');

        if (uid) {
            // Use the UID to get the row data
            var rowData = gridObj.getRowObjectFromUID(uid).data;

            // Extract the ID field from the row data
            var id = rowData.id; // Ensure 'id' is the correct field name in your grid data

            // Redirect to the IncidentReport page with the ID as a query parameter
            window.location.href = `/Home/IncidentReport?ID=${id}`;
        } else {
            console.error("UID not found in the row.");
        }
    }
</script>

