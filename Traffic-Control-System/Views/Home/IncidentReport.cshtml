@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids
@model Traffic_Control_System.Models.TrafficViolationsViewModel
@{
    ViewData["Title"] = "Incident Report Page";
}

<style>
    ::-webkit-scrollbar {
        width: 0px !important;
    }
   
    ::-webkit-scrollbar-thumb {
        background: #808080 !important;
    }

    .container {
        padding-top: 25px;
        max-width: 95%;
    }

    h2 {
        padding-left: 50px
    }

    .spacer {
        margin-left: 5px; 
    }

    .custom-access{
        color: #050505 !important;
        background-color: #6756fa;
        border-color: #6756fa;
    }

    .custom-access:focus {
        background-color: #6756fa;
        border-color: #6756fa !important;
    }

    .custom-access:focus:active {
        background-color: #1D7AFC;
        border-color: #6756fa !important;
        box-shadow: 0 0 2px 1px #6756fa !important;
    }

    .e-dropdownbase .e-list-item {
        color: white;
        background-color: #1e1e22;
    }

    .e-dropdownbase .e-list-item:hover {
        color: white;
        background-color: #42A5F5;
    }

    .badge-danger{
        color: white;
        background-color: #dc3545;
    }
    
    .e-dropdownbase .e-list-item.e-active {
        color: white;
        background-color: #42A5F5 !important;
    }

</style>
<h2>Incident Report</h2>
<div class="container">
    <div class="e-content"> 
        <div>
            @(Html.EJS().Grid("incidentReportGrid")
                .Height("400px")
                .DataSource(dataManger => {
                    dataManger.Url($"/Home/IncidentReportsList?signalID={@Model.ActiveSignalID}")
                            .Key("UID")
                            .CrossDomain(false)
                            .Adaptor("UrlAdaptor");
                })
                .Columns(col => {
                    col.Field("DateCreated").HeaderText("Date Created").Width("150").Add();
                    col.Field("LicensePlate").HeaderText("License Plate").Width("150").Add();
                    col.HeaderText("Actions")
                    .Template("<button class='k-button custom-access' onclick='onReport(this)'>Report</button>")
                    .Width("100")
                    .Add();
                })
                .AllowPaging()
                .PageSettings(ps => ps.PageSize(10))
                .AllowFiltering()
                .FilterSettings(fs => fs.Type(Syncfusion.EJ2.Grids.FilterType.Menu))
                .QueryCellInfo("queryCellInfo")
                .Render()
            )
        </div>
    </div>
</div>

<script>
    function onReport(button){
        var gridObj = document.getElementById('incidentReportGrid').ej2_instances[0];

        var row = button.closest('tr');

        var uid = row.getAttribute('data-uid');

        if (uid) {
            var rowData = gridObj.getRowObjectFromUID(uid).data;
            console.log(rowData)
            var id = rowData.uid;

            window.location.href = `/Home/Report?ID=${id}`;
        } else {
            console.error("UID not found in the row.");
        }
    }

    function queryCellInfo(args) {
        if (args.column.field === "DateCreated") {
            var dateValue = args.data.dateCreated;
            if (dateValue) {
                var localZone = moment.tz.guess();
                var cleanedDate = dateValue.toString().replace(/\sGMT.*$/, '');
                var utcDate = moment.utc(cleanedDate, "ddd MMM DD YYYY HH:mm:ss");
                var localDate = utcDate.tz(localZone).format("MM/DD/YYYY HH:mm:ss z");

                args.cell.innerText = localDate;
                console.log("Original date:", dateValue);
                console.log("Converted date:", localDate);
            }
        }
    }


</script>

