name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths:
      - Traffic-Control-System/**
      - Traffic-Control-System-API/**
      - Traffic-Control-System-Video/**
      - docker-compose.yml

jobs:
  Build-MVC:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Traffic-Control-System/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/traffic-control-system:mvc
    
  Build-API:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Traffic-Control-System-API/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/traffic-control-system:api
  
  Build-Video:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Traffic-Control-System-Video/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/traffic-control-system:video

  Deploy:
    runs-on: self-hosted
    needs: [Build-MVC, Build-API, Build-Video]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Pull latest Docker images
        run: docker-compose pull

      - name: Remove Old Continer
        run: docker-compose down

      - name: Deploy with Docker Compose
        env:
          ASPNETCORE_ENVIRONMENT: ${{ secrets.ASPNETCORE_ENVIRONMENT }}
          SyncfusionLicense: ${{ secrets.SyncfusionLicense }}
          JWT_Key: ${{ secrets.JWT_Key }}
        run: docker-compose up -d
        
      - name: Remove unused Docker images
        run: docker image prune -af